<html>
<head>
<title>ThoughtTreasure Spec Sheet</title>
</head>
<body>
<h1>ThoughtTreasure Spec Sheet</h1>

<h2>Functionality</h2>

<ul>
<li>Comprehensive natural language processing/commonsense platform</li>
<li>Question answering</li>
<li>Chatterbot</li>
<li>Story understanding</li>
<li>Classified ad parsing</li>
<li>Simulation of a 2-dimensional virtual world</li>
<li>Identification of entities in text</li>
<li>Information extraction from ASCII tables</li>
<li>Concordance generation</li>
<li>Shell (command interpreter)</li>
<li>Web API</li>
<li>Java-based client API</li>
<li>Python-based client API</li>
<li>Knowledge base flat files</li>
</ul>

<h2>Applications</h2>

<ul>
<li>Commonsense reasoning</li>
<li>Question answering</li>
<li>Information extraction</li>
<li>Interactive fiction</li>
</ul>

<h2>Source Code</h2>

<ul>
<li>Language: ANSI C</li>
<li>Lines of code including comments: 75,000</li>
</ul>

<h2>Knowledge base and lexicon</h2>

<ul>
<li>Upper ontology</li>
<li>Domain lower ontologies (clothing, food, music, and so on)</li>
<li>Concepts, words, and phrases defined using concise language</li>
<li>English words and phrases: 35,000</li>
<li>French words and phrases: 20,000</li>
<li>Closed-class lexical items not in WordNet (adverbs and adverbials,
prepositions, determiners, pronouns, conjunctions, interjections,
temporal relations, and so on)</li>
<li>Concepts: 25,000</li>
<li>Assertions: 50,000 including hierarchical links</li>
<li>Scripts: 100 with events and roles</li>
</ul>

<h2>Linguistic features</h2>

<ul>
<li>English and French lexicon/ontology</li>
<li>Verb/nominalization argument structure</li>
<li>Name dictionary with grouping of related names</li>
<li>Text agents: part-of-speech tagging, identification of names, places, products, dates, phone numbers, email headers</li>
<li>English and French syntactic parser: base component, filters, transformations</li>
<li>English and French semantic parser: intension/extension, relative clauses, appositives, genitives, tense/aspect</li>
<li>Anaphoric parser: deixis, determiners, pronouns, c-command</li>
<li>Understanding agents: converting surfacy parse into detailed understanding, steering planning agents, contexts, emotions, goals, question answering, asking clarifying questions, appointments, sleep, grids by analogy</li>
<li>English and French generator</li>
<li>Learning of new words using derivational rules</li>
<li>Learning of new inflections by algorithmic/analogical morphology</li>
</ul>

<h2>Simulation features</h2>

<ul>
<li>Space represented by 2-dimensional grids connected by wormholes</li>
<li>Prototypical grids: house, apartment, restaurant, theater, street, subway</li>
<li>Planning agents for simulating human behavior: graspers, containers, ptrans++, atrans++, mtrans++, interpersonal relations</li>
<li>Planning agents for simulating device behavior: telephone, television</li>
</ul>

<h2>Procedures</h2>

<ul>
<li>Database: Assertion/retrieval of assertions</li>
<li>Contexts</li>
<li>Anagram finder</li>
<li>Palindrome finder</li>
<li>Inverted dictionary generator</li>
<li>English/French faux ami finder</li>
<li>Intension resolver: find objects matching a description</li>
<li>Subgoaling</li>
<li>2-dimensional (occupancy array) path planner</li>
<li>Grid operations (distance, subspace, etc.)</li>
<li>Intergrid path planner</li>
<li>Trip planner</li>
<li>Clothing color matching</li>
<li>Operations for parts and wholes of objects</li>
<li>Operations for nested space (room, floor, building, city, planet)</li>
<li>Operations for large space (planetary distance, polity containment)</li>
<li>Theorem prover</li>
<li>Temporal projection</li>
<li>Abduction</li>
<li>Relation learner (corporate successions)</li>
<li>Assertion learner</li>
<li>Language translation</li>
<li>Dictionary generator</li>
<li>Free association generator</li>
<li>Corpus analysis tools</li>
<li>Multi-language, multi-stream discourse channel</li>
<li>Chatterbot main loop</li>
<li>Typing simulator with errors</li>
<li>HTML utilities</li>
<li>Report generation</li>
</ul>

<hr>

</body>
</html>
